// C interface to class NSObject
signed long long NSObject_inst_compare_(id arg2, id self);
unsigned char NSObject_inst_isInstance(id self);
unsigned char NSObject_inst_makeImmutable(id self);
id NSObject_inst_makeImmutableCopyOnFail_(unsigned char arg2, id self);
id NSObject_inst_notImplemented_(SEL arg2, id self);
id NSObject_inst_shouldNotImplement_(SEL arg2, id self);
id NSObject_inst_subclassResponsibility_(SEL arg2, id self);
void NSObject_inst_appendToXMLRPC_indent_for_(id arg2, unsigned long long arg3, id arg4, id self);
void NSObject_inst_smtpClient_mimeFailed_(id arg2, id arg3, id self);
void NSObject_inst_smtpClient_mimeSent_(id arg2, id arg3, id self);
void NSObject_inst_smtpClient_mimeUnsent_(id arg2, id arg3, id self);
id NSObject_inst_parser_resolveExternalEntityName_systemID_(id arg2, id arg3, id arg4, id self);
void NSObject_inst_parser_didEndElement_namespaceURI_qualifiedName_(id arg2, id arg3, id arg4, id arg5, id self);
void NSObject_inst_parser_didEndMappingPrefix_(id arg2, id arg3, id self);
void NSObject_inst_parser_didStartElement_namespaceURI_qualifiedName_attributes_(id arg2, id arg3, id arg4, id arg5, id arg6, id self);
void NSObject_inst_parser_didStartMappingPrefix_toURI_(id arg2, id arg3, id arg4, id self);
void NSObject_inst_parser_foundAttributeDeclarationWithName_forElement_type_defaultValue_(id arg2, id arg3, id arg4, id arg5, id arg6, id self);
void NSObject_inst_parser_foundCDATA_(id arg2, id arg3, id self);
void NSObject_inst_parser_foundCharacters_(id arg2, id arg3, id self);
void NSObject_inst_parser_foundComment_(id arg2, id arg3, id self);
void NSObject_inst_parser_foundElementDeclarationWithName_model_(id arg2, id arg3, id arg4, id self);
void NSObject_inst_parser_foundExternalEntityDeclarationWithName_publicID_systemID_(id arg2, id arg3, id arg4, id arg5, id self);
void NSObject_inst_parser_foundIgnorableWhitespace_(id arg2, id arg3, id self);
void NSObject_inst_parser_foundInternalEntityDeclarationWithName_value_(id arg2, id arg3, id arg4, id self);
void NSObject_inst_parser_foundNotationDeclarationWithName_publicID_systemID_(id arg2, id arg3, id arg4, id arg5, id self);
void NSObject_inst_parser_foundProcessingInstructionWithTarget_data_(id arg2, id arg3, id arg4, id self);
void NSObject_inst_parser_foundUnparsedEntityDeclarationWithName_publicID_systemID_notationName_(id arg2, id arg3, id arg4, id arg5, id arg6, id self);
void NSObject_inst_parser_parseErrorOccurred_(id arg2, id arg3, id self);
void NSObject_inst_parser_validationErrorOccurred_(id arg2, id arg3, id self);
void NSObject_inst_parserDidEndDocument_(id arg2, id self);
void NSObject_inst_parserDidStartDocument_(id arg2, id self);
void NSObject_inst_downloadDidBegin_(id arg2, id self);
void NSObject_inst_downloadDidFinish_(id arg2, id self);
void NSObject_inst_download_decideDestinationWithSuggestedFilename_(id arg2, id arg3, id self);
void NSObject_inst_download_didCancelAuthenticationChallenge_(id arg2, id arg3, id self);
void NSObject_inst_download_didCreateDestination_(id arg2, id arg3, id self);
void NSObject_inst_download_didFailWithError_(id arg2, id arg3, id self);
void NSObject_inst_download_didReceiveAuthenticationChallenge_(id arg2, id arg3, id self);
void NSObject_inst_download_didReceiveDataOfLength_(id arg2, unsigned long long arg3, id self);
void NSObject_inst_download_didReceiveResponse_(id arg2, id arg3, id self);
unsigned char NSObject_inst_download_shouldDecodeSourceDataOfMIMEType_(id arg2, id arg3, id self);
void NSObject_inst_download_willResumeWithResponse_fromByte_(id arg2, id arg3, signed long long arg4, id self);
id NSObject_inst_download_willSendRequest_redirectResponse_(id arg2, id arg3, id arg4, id self);
void NSObject_inst_connection_didCancelAuthenticationChallenge_(id arg2, id arg3, id self);
void NSObject_inst_connection_didFailWithError_(id arg2, id arg3, id self);
void NSObject_inst_connectionDidFinishLoading_(id arg2, id self);
void NSObject_inst_connection_didReceiveAuthenticationChallenge_(id arg2, id arg3, id self);
void NSObject_inst_connection_didReceiveData_(id arg2, id arg3, id self);
void NSObject_inst_connection_didReceiveResponse_(id arg2, id arg3, id self);
id NSObject_inst_connection_willCacheResponse_(id arg2, id arg3, id self);
id NSObject_inst_connection_willSendRequest_redirectResponse_(id arg2, id arg3, id arg4, id self);
void NSObject_inst_URL_resourceDataDidBecomeAvailable_(id arg2, id arg3, id self);
void NSObject_inst_URL_resourceDidFailLoadingWithReason_(id arg2, id arg3, id self);
void NSObject_inst_URLResourceDidCancelLoading_(id arg2, id self);
void NSObject_inst_URLResourceDidFinishLoading_(id arg2, id self);
void NSObject_inst_performSelectorOnMainThread_withObject_waitUntilDone_modes_(SEL arg2, id arg3, unsigned char arg4, id arg5, id self);
void NSObject_inst_performSelectorOnMainThread_withObject_waitUntilDone_(SEL arg2, id arg3, unsigned char arg4, id self);
void NSObject_inst_performSelector_onThread_withObject_waitUntilDone_modes_(SEL arg2, id arg3, id arg4, unsigned char arg5, id arg6, id self);
void NSObject_inst_performSelector_onThread_withObject_waitUntilDone_(SEL arg2, id arg3, id arg4, unsigned char arg5, id self);
void NSObject_inst_performSelectorInBackground_withObject_(SEL arg2, id arg3, id self);
void NSObject_inst_performSelector_withObject_afterDelay_(SEL arg2, id arg3, double arg4, id self);
void NSObject_inst_performSelector_withObject_afterDelay_inModes_(SEL arg2, id arg3, double arg4, id arg5, id self);
Class NSObject_inst_classForPortCoder(id self);
id NSObject_inst_replacementObjectForPortCoder_(id arg2, id self);
void NSObject_inst_handlePortMessage_(id arg2, id self);
unsigned char NSObject_inst_doesContain_(id arg2, id self);
unsigned char NSObject_inst_isCaseInsensitiveLike_(id arg2, id self);
unsigned char NSObject_inst_isEqualTo_(id arg2, id self);
unsigned char NSObject_inst_isGreaterThan_(id arg2, id self);
unsigned char NSObject_inst_isGreaterThanOrEqualTo_(id arg2, id self);
unsigned char NSObject_inst_isLessThan_(id arg2, id self);
unsigned char NSObject_inst_isLessThanOrEqualTo_(id arg2, id self);
unsigned char NSObject_inst_isLike_(id arg2, id self);
unsigned char NSObject_inst_isNotEqualTo_(id arg2, id self);
unsigned long long NSObject_inst_sizeInBytes(id self);
unsigned long long NSObject_inst_sizeInBytesExcluding_(id arg2, id self);
unsigned long long NSObject_inst_sizeOfContentExcluding_(id arg2, id self);
unsigned long long NSObject_inst_sizeOfInstance(id self);
id NSObject_inst_descriptionWithLocale_(id arg2, id self);
id NSObject_inst_descriptionWithLocale_indent_(id arg2, unsigned long long arg3, id self);
unsigned char NSObject_inst__dealloc(id self);
unsigned char NSObject_inst_isMetaClass(id self);
unsigned char NSObject_inst_isClass(id self);
unsigned char NSObject_inst_isMemberOfClassNamed_(const char* arg2, id self);
struct objc_method_description* NSObject_inst_descriptionForMethod_(SEL arg2, id self);
id NSObject_inst_read_(void* arg2, id self);
id NSObject_inst_write_(void* arg2, id self);
id NSObject_inst_awake(id self);
id NSObject_inst_error_(const char* arg2, id self);
unsigned char NSObject_inst_isKindOf_(Class arg2, id self);
unsigned char NSObject_inst_isMemberOf_(Class arg2, id self);
unsigned char NSObject_inst_respondsTo_(SEL arg2, id self);
unsigned char NSObject_inst_conformsTo_(id arg2, id self);
union AutoBindingsUnknown2079 /* ? */* NSObject_inst_methodFor_(SEL arg2, id self);
id NSObject_inst_doesNotRecognize_(SEL arg2, id self);
id NSObject_inst_perform_with_(SEL arg2, id arg3, id self);
id NSObject_inst_perform_with_with_(SEL arg2, id arg3, id arg4, id self);
void* NSObject_inst_observationInfo(id self);
void NSObject_inst_setObservationInfo_(void* arg2, id self);
void NSObject_inst_willChangeValueForDependentsOfKey_(id arg2, id self);
void NSObject_inst_didChangeValueForDependentsOfKey_(id arg2, id self);
void NSObject_inst_willChangeValueForKey_(id arg2, id self);
void NSObject_inst_didChangeValueForKey_(id arg2, id self);
void NSObject_inst_didChange_valuesAtIndexes_forKey_(unsigned long long arg2, id arg3, id arg4, id self);
void NSObject_inst_willChange_valuesAtIndexes_forKey_(unsigned long long arg2, id arg3, id arg4, id self);
void NSObject_inst_willChangeValueForKey_withSetMutation_usingObjects_(id arg2, unsigned long long arg3, id arg4, id self);
void NSObject_inst_didChangeValueForKey_withSetMutation_usingObjects_(id arg2, unsigned long long arg3, id arg4, id self);
void NSObject_inst_addObserver_forKeyPath_options_context_(id arg2, id arg3, unsigned long long arg4, void* arg5, id self);
void NSObject_inst_removeObserver_forKeyPath_(id arg2, id arg3, id self);
void NSObject_inst_removeObserver_forKeyPath_context_(id arg2, id arg3, void* arg4, id self);
void NSObject_inst_observeValueForKeyPath_ofObject_change_context_(id arg2, id arg3, id arg4, void* arg5, id self);
id NSObject_inst_dictionaryWithValuesForKeys_(id arg2, id self);
id NSObject_inst_mutableSetValueForKey_(id arg2, id self);
id NSObject_inst_mutableSetValueForKeyPath_(id arg2, id self);
id NSObject_inst_mutableArrayValueForKey_(id arg2, id self);
id NSObject_inst_mutableArrayValueForKeyPath_(id arg2, id self);
void NSObject_inst_setNilValueForKey_(id arg2, id self);
void NSObject_inst_setValue_forKey_(id arg2, id arg3, id self);
void NSObject_inst_setValue_forKeyPath_(id arg2, id arg3, id self);
void NSObject_inst_setValue_forUndefinedKey_(id arg2, id arg3, id self);
void NSObject_inst_setValuesForKeysWithDictionary_(id arg2, id self);
unsigned char NSObject_inst_validateValue_forKey_error_(id* arg2, id arg3, id* arg4, id self);
unsigned char NSObject_inst_validateValue_forKeyPath_error_(id* arg2, id arg3, id* arg4, id self);
id NSObject_inst_valueForKey_(id arg2, id self);
id NSObject_inst_valueForKeyPath_(id arg2, id self);
id NSObject_inst_valueForUndefinedKey_(id arg2, id self);
id NSObject_inst_storedValueForKey_(id arg2, id self);
void NSObject_inst_takeStoredValue_forKey_(id arg2, id arg3, id self);
void NSObject_inst_takeStoredValuesFromDictionary_(id arg2, id self);
id NSObject_inst_handleQueryWithUnboundKey_(id arg2, id self);
void NSObject_inst_handleTakeValue_forUnboundKey_(id arg2, id arg3, id self);
void NSObject_inst_takeValue_forKey_(id arg2, id arg3, id self);
void NSObject_inst_takeValue_forKeyPath_(id arg2, id arg3, id self);
void NSObject_inst_takeValuesFromDictionary_(id arg2, id self);
void NSObject_inst_unableToSetNilForKey_(id arg2, id self);
id NSObject_inst_valuesForKeys_(id arg2, id self);
Class NSObject_inst_unarchiver_cannotDecodeObjectOfClassName_originalClasses_(id arg2, id arg3, id arg4, id self);
id NSObject_inst_unarchiver_didDecodeObject_(id arg2, id arg3, id self);
void NSObject_inst_unarchiverDidFinish_(id arg2, id self);
void NSObject_inst_unarchiverWillFinish_(id arg2, id self);
void NSObject_inst_unarchiver_willReplaceObject_withObject_(id arg2, id arg3, id arg4, id self);
Class NSObject_inst_classForKeyedArchiver(id self);
id NSObject_inst_replacementObjectForKeyedArchiver_(id arg2, id self);
void NSObject_inst_archiver_didEncodeObject_(id arg2, id arg3, id self);
id NSObject_inst_archiver_willEncodeObject_(id arg2, id arg3, id self);
void NSObject_inst_archiverDidFinish_(id arg2, id self);
void NSObject_inst_archiverWillFinish_(id arg2, id self);
void NSObject_inst_archiver_willReplaceObject_withObject_(id arg2, id arg3, id arg4, id self);
unsigned char NSObject_inst__conformsToProtocolNamed_(const char* arg2, id self);
id NSObject_inst_attributeKeys(id self);
id NSObject_inst_classDescription(id self);
id NSObject_inst_inverseForRelationshipKey_(id arg2, id self);
id NSObject_inst_toManyRelationshipKeys(id self);
id NSObject_inst_toOneRelationshipKeys(id self);
void NSObject_inst__ARCCompliantRetainRelease(id self);
Class NSObject_inst_class(id self);
id NSObject_inst_className(id self);
id NSObject_inst_copy(id self);
void NSObject_inst_dealloc(id self);
void NSObject_inst_finalize(id self);
id NSObject_inst_free(id self);
id NSObject_inst_init(id self);
id NSObject_inst_mutableCopy(id self);
Class NSObject_inst_superclass(id self);
unsigned char NSObject_inst_conformsToProtocol_(id arg2, id self);
union AutoBindingsUnknown2079 /* ? */* NSObject_inst_methodForSelector_(SEL arg2, id self);
id NSObject_inst_methodSignatureForSelector_(SEL arg2, id self);
id NSObject_inst_description(id self);
void NSObject_inst_doesNotRecognizeSelector_(SEL arg2, id self);
void NSObject_inst_forwardInvocation_(id arg2, id self);
id NSObject_inst_awakeAfterUsingCoder_(id arg2, id self);
Class NSObject_inst_classForArchiver(id self);
Class NSObject_inst_classForCoder(id self);
id NSObject_inst_replacementObjectForArchiver_(id arg2, id self);
id NSObject_inst_replacementObjectForCoder_(id arg2, id self);
id NSObject_inst_autorelease(id self);
unsigned long long NSObject_inst_hash(id self);
unsigned char NSObject_inst_isEqual_(id arg2, id self);
unsigned char NSObject_inst_isKindOfClass_(Class arg2, id self);
unsigned char NSObject_inst_isMemberOfClass_(Class arg2, id self);
unsigned char NSObject_inst_isProxy(id self);
id NSObject_inst_performSelector_(SEL arg2, id self);
id NSObject_inst_performSelector_withObject_(SEL arg2, id arg3, id self);
id NSObject_inst_performSelector_withObject_withObject_(SEL arg2, id arg3, id arg4, id self);
oneway void NSObject_inst_release(id self);
unsigned char NSObject_inst_respondsToSelector_(SEL arg2, id self);
id NSObject_inst_retain(id self);
unsigned long long NSObject_inst_retainCount(id self);
id NSObject_inst_self(id self);
struct _NSZone* NSObject_inst_zone(id self);
void NSObject_inst_encodeWithCoder_(id arg2, id self);
id NSObject_inst_initWithCoder_(id arg2, id self);
id NSObject_inst_autoContentAccessingProxy(id self);
id NSObject_inst_forwardingTargetForSelector_(SEL arg2, id self);

id NSObject_cls_leakAt_(id* arg2, id self);
id NSObject_cls_leak_(id arg2, id self);
unsigned char NSObject_cls_registerAtExit(id self);
unsigned char NSObject_cls_registerAtExit_(SEL arg2, id self);
void NSObject_cls_setShouldCleanUp_(unsigned char arg2, id self);
unsigned char NSObject_cls_shouldCleanUp(id self);
id NSObject_cls_notImplemented_(SEL arg2, id self);
void NSObject_cls__setupForGSXML(id self);
void NSObject_cls_cancelPreviousPerformRequestsWithTarget_(id arg2, id self);
void NSObject_cls_cancelPreviousPerformRequestsWithTarget_selector_object_(id arg2, SEL arg3, id arg4, id self);
unsigned long long NSObject_cls_contentSizeOf_excluding_(id arg2, id arg3, id self);
unsigned long long NSObject_cls_sizeInBytes(id self);
unsigned long long NSObject_cls_sizeInBytesExcluding_(id arg2, id self);
unsigned long long NSObject_cls_sizeOfContentExcluding_(id arg2, id self);
void NSObject_cls_enableDoubleReleaseCheck_(unsigned char arg2, id self);
id NSObject_cls_descriptionWithLocale_(id arg2, id self);
id NSObject_cls_descriptionWithLocale_indent_(id arg2, unsigned long long arg3, id self);
struct objc_method_description* NSObject_cls_descriptionForInstanceMethod_(SEL arg2, id self);
signed long long NSObject_cls_streamVersion_(void* arg2, id self);
unsigned char NSObject_cls_instancesRespondTo_(SEL arg2, id self);
unsigned char NSObject_cls_conformsTo_(id arg2, id self);
union AutoBindingsUnknown2079 /* ? */* NSObject_cls_instanceMethodFor_(SEL arg2, id self);
id NSObject_cls_poseAs_(Class arg2, id self);
unsigned char NSObject_cls_shouldCreateTraceableLocks_(unsigned char arg2, id self);
id NSObject_cls_tracedCondition(id self);
id NSObject_cls_tracedConditionLockWithCondition_(signed long long arg2, id self);
id NSObject_cls_tracedLock(id self);
id NSObject_cls_tracedRecursiveLock(id self);
unsigned char NSObject_cls_automaticallyNotifiesObserversForKey_(id arg2, id self);
void NSObject_cls_setKeys_triggerChangeNotificationsForDependentKey_(id arg2, id arg3, id self);
id NSObject_cls_keyPathsForValuesAffectingValueForKey_(id arg2, id self);
unsigned char NSObject_cls_accessInstanceVariablesDirectly(id self);
unsigned char NSObject_cls_useStoredAccessor(id self);
Class NSObject_cls_classForKeyedUnarchiver(id self);
void NSObject_cls__TrivialAllocInit(id self);
void NSObject_cls_load(id self);
void NSObject_cls_initialize(id self);
void NSObject_cls__atExit(id self);
id NSObject_cls_alloc(id self);
id NSObject_cls_allocWithZone_(struct _NSZone* arg2, id self);
id NSObject_cls_copyWithZone_(struct _NSZone* arg2, id self);
id NSObject_cls_new(id self);
Class NSObject_cls_superclass(id self);
unsigned char NSObject_cls_instancesRespondToSelector_(SEL arg2, id self);
unsigned char NSObject_cls_conformsToProtocol_(id arg2, id self);
union AutoBindingsUnknown2079 /* ? */* NSObject_cls_instanceMethodForSelector_(SEL arg2, id self);
id NSObject_cls_instanceMethodSignatureForSelector_(SEL arg2, id self);
id NSObject_cls_description(id self);
void NSObject_cls_poseAsClass_(Class arg2, id self);
id NSObject_cls_autorelease(id self);
Class NSObject_cls_class(id self);
unsigned char NSObject_cls_isKindOfClass_(Class arg2, id self);
unsigned char NSObject_cls_isMemberOfClass_(Class arg2, id self);
unsigned char NSObject_cls_isSubclassOfClass_(Class arg2, id self);
oneway void NSObject_cls_release(id self);
id NSObject_cls_retain(id self);
unsigned long long NSObject_cls_retainCount(id self);
struct _NSZone* NSObject_cls_zone(id self);
unsigned char NSObject_cls_resolveClassMethod_(SEL arg2, id self);
unsigned char NSObject_cls_resolveInstanceMethod_(SEL arg2, id self);
void NSObject_cls_setVersion_(signed long long arg2, id self);
signed long long NSObject_cls_version(id self);
// End C interface to class NSObject
