// C interface to class NSString
NSString* NSString_inst_stringByReplacingOccurrencesOfString_withString_options_range_(id self, NSString* replace, NSString* by, NSStringCompareOptions opts, NSRange searchRange);
NSComparisonResult NSString_inst_compare_options_range_locale_(id self, NSString* string, NSUInteger mask, NSRange compareRange, id locale);
unichar NSString_inst_characterAtIndex_(id self, NSUInteger index);
int NSString_inst_intValue(id self);
instancetype NSString_inst_initWithCString_encoding_(id self, const char* byteString, NSStringEncoding encoding);
double NSString_inst_doubleValue(id self);
NSInteger NSString_inst_integerValue(id self);
NSUInteger NSString_inst_maximumLengthOfBytesUsingEncoding_(id self, NSStringEncoding encoding);
instancetype NSString_inst_initWithData_encoding_(id self, NSData* data, NSStringEncoding encoding);
NSString* NSString_inst_description(id self);
BOOL NSString_inst_isAbsolutePath(id self);
NSString* NSString_inst_stringByAppendingPathExtension_(id self, NSString* aString);
NSString* NSString_inst_capitalizedString(id self);
NSUInteger NSString_inst_completePathIntoString_caseSensitive_matchesIntoArray_filterTypes_(id self, NSString** outputName, BOOL flag, NSArray** outputArray, NSArray* filterTypes);
NSData* NSString_inst_dataUsingEncoding_allowLossyConversion_(id self, NSStringEncoding encoding, BOOL flag);
NSString* NSString_inst_stringByDeletingLastPathComponent(id self);
NSString* NSString_inst_stringByRemovingPercentEncoding(id self);
instancetype NSString_inst_initWithCharacters_length_(id self, const unichar* chars, NSUInteger length);
NSComparisonResult NSString_inst_caseInsensitiveCompare_(id self, NSString* aString);
NSRange NSString_inst_paragraphRangeForRange_(id self, NSRange range);
NSRange NSString_inst_rangeOfString_options_range_locale_(id self, NSString* aString, NSStringCompareOptions mask, NSRange searchRange, NSLocale* locale);
instancetype NSString_inst_initWithCharactersNoCopy_length_freeWhenDone_(id self, unichar* chars, NSUInteger length, BOOL flag);
instancetype NSString_inst_initWithContentsOfURL_encoding_error_(id self, NSURL* url, NSStringEncoding enc, NSError** error);
instancetype NSString_inst_initWithBytes_length_encoding_(id self, const void* bytes, NSUInteger length, NSStringEncoding encoding);
NSRange NSString_inst_rangeOfString_(id self, NSString* string);
NSRange NSString_inst_rangeOfCharacterFromSet_options_range_(id self, NSCharacterSet* aSet, NSUInteger mask, NSRange aRange);
NSArray* NSString_inst_stringsByAppendingPaths_(id self, NSArray* paths);
NSStringEncoding NSString_inst_smallestEncoding(id self);
NSRange NSString_inst_rangeOfComposedCharacterSequencesForRange_(id self, NSRange range);
const char* NSString_inst_cStringUsingEncoding_(id self, NSStringEncoding encoding);
NSString* NSString_inst_commonPrefixWithString_options_(id self, NSString* aString, NSUInteger mask);
NSString* NSString_inst_stringByAbbreviatingWithTildeInPath(id self);
BOOL NSString_inst_writeToFile_atomically_encoding_error_(id self, NSString* path, BOOL atomically, NSStringEncoding enc, NSError** error);
NSString* NSString_inst_stringByTrimmingCharactersInSet_(id self, NSCharacterSet* aSet);
NSRange NSString_inst_rangeOfString_options_(id self, NSString* string, NSUInteger mask);
NSString* NSString_inst_precomposedStringWithCompatibilityMapping(id self);
NSDictionary* NSString_inst_propertyListFromStringsFileFormat(id self);
NSArray* NSString_inst_componentsSeparatedByCharactersInSet_(id self, NSCharacterSet* separator);
NSString* NSString_inst_lastPathComponent(id self);
NSUInteger NSString_inst_cStringLength(id self);
NSString* NSString_inst_substringWithRange_(id self, NSRange aRange);
NSString* NSString_inst_stringByAppendingString_(id self, NSString* aString);
void NSString_inst_getCString_maxLength_(id self, char* buffer, NSUInteger maxLength);
instancetype NSString_inst_initWithCStringNoCopy_length_freeWhenDone_(id self, char* byteString, NSUInteger length, BOOL flag);
NSRange NSString_inst_rangeOfString_options_range_(id self, NSString* aString, NSUInteger mask, NSRange aRange);
void NSString_inst_getCharacters_range_(id self, unichar* buffer, NSRange aRange);
instancetype NSString_inst_initWithCString_length_(id self, const char* byteString, NSUInteger length);
NSStringEncoding NSString_inst_fastestEncoding(id self);
const char* NSString_inst_lossyCString(id self);
BOOL NSString_inst_hasPrefix_(id self, NSString* aString);
instancetype NSString_inst_initWithFormat_arguments_(id self, NSString* format, va_list argList);
instancetype NSString_inst_initWithFormat_locale_(id self, NSString* format, NSDictionary* locale);
instancetype NSString_inst_initWithBytesNoCopy_length_encoding_freeWhenDone_(id self, void* bytes, NSUInteger length, NSStringEncoding encoding, BOOL flag);
BOOL NSString_inst_writeToFile_atomically_(id self, NSString* filename, BOOL useAuxiliaryFile);
const char* NSString_inst_UTF8String(id self);
float NSString_inst_floatValue(id self);
NSString* NSString_inst_stringByAppendingFormat_(id self, NSString* format);
instancetype NSString_inst_initWithContentsOfFile_usedEncoding_error_(id self, NSString* path, NSStringEncoding* enc, NSError** error);
NSComparisonResult NSString_inst_localizedCaseInsensitiveCompare_(id self, NSString* string);
BOOL NSString_inst_canBeConvertedToEncoding_(id self, NSStringEncoding encoding);
BOOL NSString_inst_hasSuffix_(id self, NSString* aString);
instancetype NSString_inst_initWithContentsOfFile_(id self, NSString* path);
instancetype NSString_inst_initWithContentsOfFile_encoding_error_(id self, NSString* path, NSStringEncoding enc, NSError** error);
NSUInteger NSString_inst_lengthOfBytesUsingEncoding_(id self, NSStringEncoding encoding);
NSArray* NSString_inst_componentsSeparatedByString_(id self, NSString* separator);
NSComparisonResult NSString_inst_localizedCompare_(id self, NSString* string);
NSString* NSString_inst_uppercaseString(id self);
BOOL NSString_inst_containsString_(id self, NSString* string);
instancetype NSString_inst_initWithString_(id self, NSString* string);
int NSString_inst__baseLength(id self);
NSString* NSString_inst_stringByPaddingToLength_withString_startingAtIndex_(id self, NSUInteger newLength, NSString* padString, NSUInteger padIndex);
instancetype NSString_inst_initWithCString_(id self, const char* byteString);
instancetype NSString_inst_initWithFormat_locale_arguments_(id self, NSString* format, NSDictionary* locale, va_list argList);
NSString* NSString_inst_stringByAddingPercentEncodingWithAllowedCharacters_(id self, NSCharacterSet* aSet);
NSString* NSString_inst_decomposedStringWithCompatibilityMapping(id self);
long long NSString_inst_longLongValue(id self);
NSRange NSString_inst_rangeOfCharacterFromSet_options_(id self, NSCharacterSet* aSet, NSUInteger mask);
NSArray* NSString_inst_pathComponents(id self);
NSString* NSString_inst_substringFromIndex_(id self, NSUInteger index);
void NSString_inst_getLineStart_end_contentsEnd_forRange_(id self, NSUInteger* startIndex, NSUInteger* lineEndIndex, NSUInteger* contentsEndIndex, NSRange aRange);
NSString* NSString_inst_stringByResolvingSymlinksInPath(id self);
NSString* NSString_inst_stringByAddingPercentEscapesUsingEncoding_(id self, NSStringEncoding e);
instancetype NSString_inst_initWithUTF8String_(id self, const char* bytes);
NSComparisonResult NSString_inst_compare_options_(id self, NSString* aString, NSUInteger mask);
BOOL NSString_inst_writeToURL_atomically_encoding_error_(id self, NSURL* url, BOOL atomically, NSStringEncoding enc, NSError** error);
BOOL NSString_inst_isEqual_(id self, id anObject);
NSComparisonResult NSString_inst_compare_options_range_(id self, NSString* aString, NSUInteger mask, NSRange aRange);
NSRange NSString_inst_rangeOfCharacterFromSet_(id self, NSCharacterSet* aSet);
NSString* NSString_inst_stringByReplacingPercentEscapesUsingEncoding_(id self, NSStringEncoding e);
instancetype NSString_inst_initWithContentsOfURL_(id self, NSURL* url);
void NSString_inst_getParagraphStart_end_contentsEnd_forRange_(id self, NSUInteger* startIndex, NSUInteger* parEndIndex, NSUInteger* contentsEndIndex, NSRange range);
NSRange NSString_inst_lineRangeForRange_(id self, NSRange aRange);
BOOL NSString_inst_getCString_maxLength_encoding_(id self, char* buffer, NSUInteger maxLength, NSStringEncoding encoding);
BOOL NSString_inst_writeToURL_atomically_(id self, NSURL* url, BOOL atomically);
NSUInteger NSString_inst_hash(id self);
instancetype NSString_inst_init(id self);
instancetype NSString_inst_initWithFormat_(id self, NSString* format);
NSComparisonResult NSString_inst_compare_(id self, NSString* aString);
instancetype NSString_inst_initWithContentsOfURL_usedEncoding_error_(id self, NSURL* url, NSStringEncoding* enc, NSError** error);
void NSString_inst_getCharacters_(id self, unichar* buffer);
const char* NSString_inst_cString(id self);
BOOL NSString_inst_boolValue(id self);
NSData* NSString_inst_dataUsingEncoding_(id self, NSStringEncoding encoding);
NSString* NSString_inst_decomposedStringWithCanonicalMapping(id self);
NSRange NSString_inst_rangeOfComposedCharacterSequenceAtIndex_(id self, NSUInteger anIndex);
NSString* NSString_inst_stringByDeletingPathExtension(id self);
BOOL NSString_inst_getFileSystemRepresentation_maxLength_(id self, GSNativeChar* buffer, NSUInteger size);
NSString* NSString_inst_stringByAppendingPathComponent_(id self, NSString* aString);
const GSNativeChar* NSString_inst_fileSystemRepresentation(id self);
void NSString_inst_enumerateSubstringsInRange_options_usingBlock_(id self, NSRange range, NSStringEnumerationOptions opts, GSNSStringEnumerationBlock block);
void NSString_inst_getCString_(id self, char* buffer);
NSString* NSString_inst_pathExtension(id self);
NSString* NSString_inst_lowercaseString(id self);
NSString* NSString_inst_stringByStandardizingPath(id self);
NSString* NSString_inst_stringByReplacingOccurrencesOfString_withString_(id self, NSString* replace, NSString* by);
NSString* NSString_inst_substringToIndex_(id self, NSUInteger index);
id NSString_inst_propertyList(id self);
NSString* NSString_inst_precomposedStringWithCanonicalMapping(id self);
NSUInteger NSString_inst_length(id self);
BOOL NSString_inst_isEqualToString_(id self, NSString* aString);
void NSString_inst_getCString_maxLength_range_remainingRange_(id self, char* buffer, NSUInteger maxLength, NSRange aRange, NSRange* leftoverRange);
NSString* NSString_inst_stringByReplacingCharactersInRange_withString_(id self, NSRange aRange, NSString* by);
NSString* NSString_inst_stringByExpandingTildeInPath(id self);

NSString* NSString_cls_localizedNameOfStringEncoding_(id self, NSStringEncoding encoding);
instancetype NSString_cls_stringWithContentsOfURL_encoding_error_(id self, NSURL* url, NSStringEncoding enc, NSError** error);
instancetype NSString_cls_stringWithContentsOfURL_(id self, NSURL* url);
NSString* NSString_cls_pathWithComponents_(id self, NSArray* components);
NSStringEncoding* NSString_cls_availableStringEncodings(id self);
instancetype NSString_cls_stringWithCharacters_length_(id self, const unichar* chars, NSUInteger length);
instancetype NSString_cls_stringWithContentsOfFile_encoding_error_(id self, NSString* path, NSStringEncoding enc, NSError** error);
instancetype NSString_cls_stringWithCString_encoding_(id self, const char* byteString, NSStringEncoding encoding);
instancetype NSString_cls_stringWithCString_length_(id self, const char* byteString, NSUInteger length);
instancetype NSString_cls_stringWithFormat_(id self, NSString* format);
instancetype NSString_cls_string(id self);
NSString* NSString_cls_localizedStringWithFormat_(id self, NSString* format);
instancetype NSString_cls_stringWithContentsOfFile_(id self, NSString* path);
instancetype NSString_cls_stringWithUTF8String_(id self, const char* bytes);
NSStringEncoding NSString_cls_defaultCStringEncoding(id self);
instancetype NSString_cls_stringWithString_(id self, NSString* aString);
Class NSString_cls_constantStringClass(id self);
instancetype NSString_cls_stringWithContentsOfFile_usedEncoding_error_(id self, NSString* path, NSStringEncoding* enc, NSError** error);
instancetype NSString_cls_stringWithContentsOfURL_usedEncoding_error_(id self, NSURL* url, NSStringEncoding* enc, NSError** error);
instancetype NSString_cls_stringWithCString_(id self, const char* byteString);
// End C interface to class NSString
