// C interface to class NSObject
signed long long NSObject_cls_compare(id arg2, id self);
unsigned char NSObject_cls_isInstance(id self);
unsigned char NSObject_cls_makeImmutable(id self);
id NSObject_cls_makeImmutableCopyOnFail(unsigned char arg2, id self);
id NSObject_cls_notImplemented(SEL arg2, id self);
id NSObject_cls_shouldNotImplement(SEL arg2, id self);
id NSObject_cls_subclassResponsibility(SEL arg2, id self);
void NSObject_cls_appendToXMLRPC_indent_for(id arg2, unsigned long long arg3, id arg4, id self);
void NSObject_cls_smtpClient_mimeFailed(id arg2, id arg3, id self);
void NSObject_cls_smtpClient_mimeSent(id arg2, id arg3, id self);
void NSObject_cls_smtpClient_mimeUnsent(id arg2, id arg3, id self);
id NSObject_cls_parser_resolveExternalEntityName_systemID(id arg2, id arg3, id arg4, id self);
void NSObject_cls_parser_didEndElement_namespaceURI_qualifiedName(id arg2, id arg3, id arg4, id arg5, id self);
void NSObject_cls_parser_didEndMappingPrefix(id arg2, id arg3, id self);
void NSObject_cls_parser_didStartElement_namespaceURI_qualifiedName_attributes(id arg2, id arg3, id arg4, id arg5, id arg6, id self);
void NSObject_cls_parser_didStartMappingPrefix_toURI(id arg2, id arg3, id arg4, id self);
void NSObject_cls_parser_foundAttributeDeclarationWithName_forElement_type_defaultValue(id arg2, id arg3, id arg4, id arg5, id arg6, id self);
void NSObject_cls_parser_foundCDATA(id arg2, id arg3, id self);
void NSObject_cls_parser_foundCharacters(id arg2, id arg3, id self);
void NSObject_cls_parser_foundComment(id arg2, id arg3, id self);
void NSObject_cls_parser_foundElementDeclarationWithName_model(id arg2, id arg3, id arg4, id self);
void NSObject_cls_parser_foundExternalEntityDeclarationWithName_publicID_systemID(id arg2, id arg3, id arg4, id arg5, id self);
void NSObject_cls_parser_foundIgnorableWhitespace(id arg2, id arg3, id self);
void NSObject_cls_parser_foundInternalEntityDeclarationWithName_value(id arg2, id arg3, id arg4, id self);
void NSObject_cls_parser_foundNotationDeclarationWithName_publicID_systemID(id arg2, id arg3, id arg4, id arg5, id self);
void NSObject_cls_parser_foundProcessingInstructionWithTarget_data(id arg2, id arg3, id arg4, id self);
void NSObject_cls_parser_foundUnparsedEntityDeclarationWithName_publicID_systemID_notationName(id arg2, id arg3, id arg4, id arg5, id arg6, id self);
void NSObject_cls_parser_parseErrorOccurred(id arg2, id arg3, id self);
void NSObject_cls_parser_validationErrorOccurred(id arg2, id arg3, id self);
void NSObject_cls_parserDidEndDocument(id arg2, id self);
void NSObject_cls_parserDidStartDocument(id arg2, id self);
void NSObject_cls_downloadDidBegin(id arg2, id self);
void NSObject_cls_downloadDidFinish(id arg2, id self);
void NSObject_cls_download_decideDestinationWithSuggestedFilename(id arg2, id arg3, id self);
void NSObject_cls_download_didCancelAuthenticationChallenge(id arg2, id arg3, id self);
void NSObject_cls_download_didCreateDestination(id arg2, id arg3, id self);
void NSObject_cls_download_didFailWithError(id arg2, id arg3, id self);
void NSObject_cls_download_didReceiveAuthenticationChallenge(id arg2, id arg3, id self);
void NSObject_cls_download_didReceiveDataOfLength(id arg2, unsigned long long arg3, id self);
void NSObject_cls_download_didReceiveResponse(id arg2, id arg3, id self);
unsigned char NSObject_cls_download_shouldDecodeSourceDataOfMIMEType(id arg2, id arg3, id self);
void NSObject_cls_download_willResumeWithResponse_fromByte(id arg2, id arg3, signed long long arg4, id self);
id NSObject_cls_download_willSendRequest_redirectResponse(id arg2, id arg3, id arg4, id self);
void NSObject_cls_connection_didCancelAuthenticationChallenge(id arg2, id arg3, id self);
void NSObject_cls_connection_didFailWithError(id arg2, id arg3, id self);
void NSObject_cls_connectionDidFinishLoading(id arg2, id self);
void NSObject_cls_connection_didReceiveAuthenticationChallenge(id arg2, id arg3, id self);
void NSObject_cls_connection_didReceiveData(id arg2, id arg3, id self);
void NSObject_cls_connection_didReceiveResponse(id arg2, id arg3, id self);
id NSObject_cls_connection_willCacheResponse(id arg2, id arg3, id self);
id NSObject_cls_connection_willSendRequest_redirectResponse(id arg2, id arg3, id arg4, id self);
void NSObject_cls_URL_resourceDataDidBecomeAvailable(id arg2, id arg3, id self);
void NSObject_cls_URL_resourceDidFailLoadingWithReason(id arg2, id arg3, id self);
void NSObject_cls_URLResourceDidCancelLoading(id arg2, id self);
void NSObject_cls_URLResourceDidFinishLoading(id arg2, id self);
void NSObject_cls_performSelectorOnMainThread_withObject_waitUntilDone_modes(SEL arg2, id arg3, unsigned char arg4, id arg5, id self);
void NSObject_cls_performSelectorOnMainThread_withObject_waitUntilDone(SEL arg2, id arg3, unsigned char arg4, id self);
void NSObject_cls_performSelector_onThread_withObject_waitUntilDone_modes(SEL arg2, id arg3, id arg4, unsigned char arg5, id arg6, id self);
void NSObject_cls_performSelector_onThread_withObject_waitUntilDone(SEL arg2, id arg3, id arg4, unsigned char arg5, id self);
void NSObject_cls_performSelectorInBackground_withObject(SEL arg2, id arg3, id self);
void NSObject_cls_performSelector_withObject_afterDelay(SEL arg2, id arg3, double arg4, id self);
void NSObject_cls_performSelector_withObject_afterDelay_inModes(SEL arg2, id arg3, double arg4, id arg5, id self);
Class NSObject_cls_classForPortCoder(id self);
id NSObject_cls_replacementObjectForPortCoder(id arg2, id self);
void NSObject_cls_handlePortMessage(id arg2, id self);
unsigned char NSObject_cls_doesContain(id arg2, id self);
unsigned char NSObject_cls_isCaseInsensitiveLike(id arg2, id self);
unsigned char NSObject_cls_isEqualTo(id arg2, id self);
unsigned char NSObject_cls_isGreaterThan(id arg2, id self);
unsigned char NSObject_cls_isGreaterThanOrEqualTo(id arg2, id self);
unsigned char NSObject_cls_isLessThan(id arg2, id self);
unsigned char NSObject_cls_isLessThanOrEqualTo(id arg2, id self);
unsigned char NSObject_cls_isLike(id arg2, id self);
unsigned char NSObject_cls_isNotEqualTo(id arg2, id self);
unsigned long long NSObject_cls_sizeInBytes(id self);
unsigned long long NSObject_cls_sizeInBytesExcluding(id arg2, id self);
unsigned long long NSObject_cls_sizeOfContentExcluding(id arg2, id self);
unsigned long long NSObject_cls_sizeOfInstance(id self);
id NSObject_cls_descriptionWithLocale(id arg2, id self);
id NSObject_cls_descriptionWithLocale_indent(id arg2, unsigned long long arg3, id self);
unsigned char NSObject_cls__dealloc(id self);
unsigned char NSObject_cls_isMetaClass(id self);
unsigned char NSObject_cls_isClass(id self);
unsigned char NSObject_cls_isMemberOfClassNamed(const char* arg2, id self);
struct objc_method_description* NSObject_cls_descriptionForMethod(SEL arg2, id self);
id NSObject_cls_read(void* arg2, id self);
id NSObject_cls_write(void* arg2, id self);
id NSObject_cls_awake(id self);
id NSObject_cls_error(const char* arg2, id self);
unsigned char NSObject_cls_isKindOf(Class arg2, id self);
unsigned char NSObject_cls_isMemberOf(Class arg2, id self);
unsigned char NSObject_cls_respondsTo(SEL arg2, id self);
unsigned char NSObject_cls_conformsTo(id arg2, id self);
union Unknown1804289383 /* ? */* NSObject_cls_methodFor(SEL arg2, id self);
id NSObject_cls_doesNotRecognize(SEL arg2, id self);
id NSObject_cls_perform_with(SEL arg2, id arg3, id self);
id NSObject_cls_perform_with_with(SEL arg2, id arg3, id arg4, id self);
void* NSObject_cls_observationInfo(id self);
void NSObject_cls_setObservationInfo(void* arg2, id self);
void NSObject_cls_willChangeValueForDependentsOfKey(id arg2, id self);
void NSObject_cls_didChangeValueForDependentsOfKey(id arg2, id self);
void NSObject_cls_willChangeValueForKey(id arg2, id self);
void NSObject_cls_didChangeValueForKey(id arg2, id self);
void NSObject_cls_didChange_valuesAtIndexes_forKey(unsigned long long arg2, id arg3, id arg4, id self);
void NSObject_cls_willChange_valuesAtIndexes_forKey(unsigned long long arg2, id arg3, id arg4, id self);
void NSObject_cls_willChangeValueForKey_withSetMutation_usingObjects(id arg2, unsigned long long arg3, id arg4, id self);
void NSObject_cls_didChangeValueForKey_withSetMutation_usingObjects(id arg2, unsigned long long arg3, id arg4, id self);
void NSObject_cls_addObserver_forKeyPath_options_context(id arg2, id arg3, unsigned long long arg4, void* arg5, id self);
void NSObject_cls_removeObserver_forKeyPath(id arg2, id arg3, id self);
void NSObject_cls_removeObserver_forKeyPath_context(id arg2, id arg3, void* arg4, id self);
void NSObject_cls_observeValueForKeyPath_ofObject_change_context(id arg2, id arg3, id arg4, void* arg5, id self);
id NSObject_cls_dictionaryWithValuesForKeys(id arg2, id self);
id NSObject_cls_mutableSetValueForKey(id arg2, id self);
id NSObject_cls_mutableSetValueForKeyPath(id arg2, id self);
id NSObject_cls_mutableArrayValueForKey(id arg2, id self);
id NSObject_cls_mutableArrayValueForKeyPath(id arg2, id self);
void NSObject_cls_setNilValueForKey(id arg2, id self);
void NSObject_cls_setValue_forKey(id arg2, id arg3, id self);
void NSObject_cls_setValue_forKeyPath(id arg2, id arg3, id self);
void NSObject_cls_setValue_forUndefinedKey(id arg2, id arg3, id self);
void NSObject_cls_setValuesForKeysWithDictionary(id arg2, id self);
unsigned char NSObject_cls_validateValue_forKey_error(id* arg2, id arg3, id* arg4, id self);
unsigned char NSObject_cls_validateValue_forKeyPath_error(id* arg2, id arg3, id* arg4, id self);
id NSObject_cls_valueForKey(id arg2, id self);
id NSObject_cls_valueForKeyPath(id arg2, id self);
id NSObject_cls_valueForUndefinedKey(id arg2, id self);
id NSObject_cls_storedValueForKey(id arg2, id self);
void NSObject_cls_takeStoredValue_forKey(id arg2, id arg3, id self);
void NSObject_cls_takeStoredValuesFromDictionary(id arg2, id self);
id NSObject_cls_handleQueryWithUnboundKey(id arg2, id self);
void NSObject_cls_handleTakeValue_forUnboundKey(id arg2, id arg3, id self);
void NSObject_cls_takeValue_forKey(id arg2, id arg3, id self);
void NSObject_cls_takeValue_forKeyPath(id arg2, id arg3, id self);
void NSObject_cls_takeValuesFromDictionary(id arg2, id self);
void NSObject_cls_unableToSetNilForKey(id arg2, id self);
id NSObject_cls_valuesForKeys(id arg2, id self);
Class NSObject_cls_unarchiver_cannotDecodeObjectOfClassName_originalClasses(id arg2, id arg3, id arg4, id self);
id NSObject_cls_unarchiver_didDecodeObject(id arg2, id arg3, id self);
void NSObject_cls_unarchiverDidFinish(id arg2, id self);
void NSObject_cls_unarchiverWillFinish(id arg2, id self);
void NSObject_cls_unarchiver_willReplaceObject_withObject(id arg2, id arg3, id arg4, id self);
Class NSObject_cls_classForKeyedArchiver(id self);
id NSObject_cls_replacementObjectForKeyedArchiver(id arg2, id self);
void NSObject_cls_archiver_didEncodeObject(id arg2, id arg3, id self);
id NSObject_cls_archiver_willEncodeObject(id arg2, id arg3, id self);
void NSObject_cls_archiverDidFinish(id arg2, id self);
void NSObject_cls_archiverWillFinish(id arg2, id self);
void NSObject_cls_archiver_willReplaceObject_withObject(id arg2, id arg3, id arg4, id self);
unsigned char NSObject_cls__conformsToProtocolNamed(const char* arg2, id self);
id NSObject_cls_attributeKeys(id self);
id NSObject_cls_classDescription(id self);
id NSObject_cls_inverseForRelationshipKey(id arg2, id self);
id NSObject_cls_toManyRelationshipKeys(id self);
id NSObject_cls_toOneRelationshipKeys(id self);
void NSObject_cls__ARCCompliantRetainRelease(id self);
Class NSObject_cls_class(id self);
id NSObject_cls_className(id self);
id NSObject_cls_copy(id self);
void NSObject_cls_dealloc(id self);
void NSObject_cls_finalize(id self);
id NSObject_cls_free(id self);
id NSObject_cls_init(id self);
id NSObject_cls_mutableCopy(id self);
Class NSObject_cls_superclass(id self);
unsigned char NSObject_cls_conformsToProtocol(id arg2, id self);
union Unknown846930886 /* ? */* NSObject_cls_methodForSelector(SEL arg2, id self);
id NSObject_cls_methodSignatureForSelector(SEL arg2, id self);
id NSObject_cls_description(id self);
void NSObject_cls_doesNotRecognizeSelector(SEL arg2, id self);
void NSObject_cls_forwardInvocation(id arg2, id self);
id NSObject_cls_awakeAfterUsingCoder(id arg2, id self);
Class NSObject_cls_classForArchiver(id self);
Class NSObject_cls_classForCoder(id self);
id NSObject_cls_replacementObjectForArchiver(id arg2, id self);
id NSObject_cls_replacementObjectForCoder(id arg2, id self);
id NSObject_cls_autorelease(id self);
unsigned long long NSObject_cls_hash(id self);
unsigned char NSObject_cls_isEqual(id arg2, id self);
unsigned char NSObject_cls_isKindOfClass(Class arg2, id self);
unsigned char NSObject_cls_isMemberOfClass(Class arg2, id self);
unsigned char NSObject_cls_isProxy(id self);
id NSObject_cls_performSelector(SEL arg2, id self);
id NSObject_cls_performSelector_withObject(SEL arg2, id arg3, id self);
id NSObject_cls_performSelector_withObject_withObject(SEL arg2, id arg3, id arg4, id self);
oneway void NSObject_cls_release(id self);
unsigned char NSObject_cls_respondsToSelector(SEL arg2, id self);
id NSObject_cls_retain(id self);
unsigned long long NSObject_cls_retainCount(id self);
id NSObject_cls_self(id self);
struct _NSZone* NSObject_cls_zone(id self);
void NSObject_cls_encodeWithCoder(id arg2, id self);
id NSObject_cls_initWithCoder(id arg2, id self);
id NSObject_cls_autoContentAccessingProxy(id self);
id NSObject_cls_forwardingTargetForSelector(SEL arg2, id self);

id NSObject_inst_leakAt(id* arg2, id self);
id NSObject_inst_leak(id arg2, id self);
unsigned char NSObject_inst_registerAtExit(id self);
unsigned char NSObject_inst_registerAtExit(SEL arg2, id self);
void NSObject_inst_setShouldCleanUp(unsigned char arg2, id self);
unsigned char NSObject_inst_shouldCleanUp(id self);
id NSObject_inst_notImplemented(SEL arg2, id self);
void NSObject_inst__setupForGSXML(id self);
void NSObject_inst_cancelPreviousPerformRequestsWithTarget(id arg2, id self);
void NSObject_inst_cancelPreviousPerformRequestsWithTarget_selector_object(id arg2, SEL arg3, id arg4, id self);
unsigned long long NSObject_inst_contentSizeOf_excluding(id arg2, id arg3, id self);
unsigned long long NSObject_inst_sizeInBytes(id self);
unsigned long long NSObject_inst_sizeInBytesExcluding(id arg2, id self);
unsigned long long NSObject_inst_sizeOfContentExcluding(id arg2, id self);
void NSObject_inst_enableDoubleReleaseCheck(unsigned char arg2, id self);
id NSObject_inst_descriptionWithLocale(id arg2, id self);
id NSObject_inst_descriptionWithLocale_indent(id arg2, unsigned long long arg3, id self);
struct objc_method_description* NSObject_inst_descriptionForInstanceMethod(SEL arg2, id self);
signed long long NSObject_inst_streamVersion(void* arg2, id self);
unsigned char NSObject_inst_instancesRespondTo(SEL arg2, id self);
unsigned char NSObject_inst_conformsTo(id arg2, id self);
union Unknown1681692777 /* ? */* NSObject_inst_instanceMethodFor(SEL arg2, id self);
id NSObject_inst_poseAs(Class arg2, id self);
unsigned char NSObject_inst_shouldCreateTraceableLocks(unsigned char arg2, id self);
id NSObject_inst_tracedCondition(id self);
id NSObject_inst_tracedConditionLockWithCondition(signed long long arg2, id self);
id NSObject_inst_tracedLock(id self);
id NSObject_inst_tracedRecursiveLock(id self);
unsigned char NSObject_inst_automaticallyNotifiesObserversForKey(id arg2, id self);
void NSObject_inst_setKeys_triggerChangeNotificationsForDependentKey(id arg2, id arg3, id self);
id NSObject_inst_keyPathsForValuesAffectingValueForKey(id arg2, id self);
unsigned char NSObject_inst_accessInstanceVariablesDirectly(id self);
unsigned char NSObject_inst_useStoredAccessor(id self);
Class NSObject_inst_classForKeyedUnarchiver(id self);
void NSObject_inst__TrivialAllocInit(id self);
void NSObject_inst_load(id self);
void NSObject_inst_initialize(id self);
void NSObject_inst__atExit(id self);
id NSObject_inst_alloc(id self);
id NSObject_inst_allocWithZone(struct _NSZone* arg2, id self);
id NSObject_inst_copyWithZone(struct _NSZone* arg2, id self);
id NSObject_inst_new(id self);
Class NSObject_inst_superclass(id self);
unsigned char NSObject_inst_instancesRespondToSelector(SEL arg2, id self);
unsigned char NSObject_inst_conformsToProtocol(id arg2, id self);
union Unknown1714636915 /* ? */* NSObject_inst_instanceMethodForSelector(SEL arg2, id self);
id NSObject_inst_instanceMethodSignatureForSelector(SEL arg2, id self);
id NSObject_inst_description(id self);
void NSObject_inst_poseAsClass(Class arg2, id self);
id NSObject_inst_autorelease(id self);
Class NSObject_inst_class(id self);
unsigned char NSObject_inst_isKindOfClass(Class arg2, id self);
unsigned char NSObject_inst_isMemberOfClass(Class arg2, id self);
unsigned char NSObject_inst_isSubclassOfClass(Class arg2, id self);
oneway void NSObject_inst_release(id self);
id NSObject_inst_retain(id self);
unsigned long long NSObject_inst_retainCount(id self);
struct _NSZone* NSObject_inst_zone(id self);
unsigned char NSObject_inst_resolveClassMethod(SEL arg2, id self);
unsigned char NSObject_inst_resolveInstanceMethod(SEL arg2, id self);
void NSObject_inst_setVersion(signed long long arg2, id self);
signed long long NSObject_inst_version(id self);
// End C interface to class NSObject
