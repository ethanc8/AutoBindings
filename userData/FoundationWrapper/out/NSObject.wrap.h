// C interface to class NSObject
signed long long NSObject_cls_compare_(id arg2, id self);
unsigned char NSObject_cls_isInstance_noarg(id self);
unsigned char NSObject_cls_makeImmutable_noarg(id self);
id NSObject_cls_makeImmutableCopyOnFail_(unsigned char arg2, id self);
id NSObject_cls_notImplemented_(SEL arg2, id self);
id NSObject_cls_shouldNotImplement_(SEL arg2, id self);
id NSObject_cls_subclassResponsibility_(SEL arg2, id self);
void NSObject_cls_appendToXMLRPC_indent_for_(id arg2, unsigned long long arg3, id arg4, id self);
void NSObject_cls_smtpClient_mimeFailed_(id arg2, id arg3, id self);
void NSObject_cls_smtpClient_mimeSent_(id arg2, id arg3, id self);
void NSObject_cls_smtpClient_mimeUnsent_(id arg2, id arg3, id self);
id NSObject_cls_parser_resolveExternalEntityName_systemID_(id arg2, id arg3, id arg4, id self);
void NSObject_cls_parser_didEndElement_namespaceURI_qualifiedName_(id arg2, id arg3, id arg4, id arg5, id self);
void NSObject_cls_parser_didEndMappingPrefix_(id arg2, id arg3, id self);
void NSObject_cls_parser_didStartElement_namespaceURI_qualifiedName_attributes_(id arg2, id arg3, id arg4, id arg5, id arg6, id self);
void NSObject_cls_parser_didStartMappingPrefix_toURI_(id arg2, id arg3, id arg4, id self);
void NSObject_cls_parser_foundAttributeDeclarationWithName_forElement_type_defaultValue_(id arg2, id arg3, id arg4, id arg5, id arg6, id self);
void NSObject_cls_parser_foundCDATA_(id arg2, id arg3, id self);
void NSObject_cls_parser_foundCharacters_(id arg2, id arg3, id self);
void NSObject_cls_parser_foundComment_(id arg2, id arg3, id self);
void NSObject_cls_parser_foundElementDeclarationWithName_model_(id arg2, id arg3, id arg4, id self);
void NSObject_cls_parser_foundExternalEntityDeclarationWithName_publicID_systemID_(id arg2, id arg3, id arg4, id arg5, id self);
void NSObject_cls_parser_foundIgnorableWhitespace_(id arg2, id arg3, id self);
void NSObject_cls_parser_foundInternalEntityDeclarationWithName_value_(id arg2, id arg3, id arg4, id self);
void NSObject_cls_parser_foundNotationDeclarationWithName_publicID_systemID_(id arg2, id arg3, id arg4, id arg5, id self);
void NSObject_cls_parser_foundProcessingInstructionWithTarget_data_(id arg2, id arg3, id arg4, id self);
void NSObject_cls_parser_foundUnparsedEntityDeclarationWithName_publicID_systemID_notationName_(id arg2, id arg3, id arg4, id arg5, id arg6, id self);
void NSObject_cls_parser_parseErrorOccurred_(id arg2, id arg3, id self);
void NSObject_cls_parser_validationErrorOccurred_(id arg2, id arg3, id self);
void NSObject_cls_parserDidEndDocument_(id arg2, id self);
void NSObject_cls_parserDidStartDocument_(id arg2, id self);
void NSObject_cls_downloadDidBegin_(id arg2, id self);
void NSObject_cls_downloadDidFinish_(id arg2, id self);
void NSObject_cls_download_decideDestinationWithSuggestedFilename_(id arg2, id arg3, id self);
void NSObject_cls_download_didCancelAuthenticationChallenge_(id arg2, id arg3, id self);
void NSObject_cls_download_didCreateDestination_(id arg2, id arg3, id self);
void NSObject_cls_download_didFailWithError_(id arg2, id arg3, id self);
void NSObject_cls_download_didReceiveAuthenticationChallenge_(id arg2, id arg3, id self);
void NSObject_cls_download_didReceiveDataOfLength_(id arg2, unsigned long long arg3, id self);
void NSObject_cls_download_didReceiveResponse_(id arg2, id arg3, id self);
unsigned char NSObject_cls_download_shouldDecodeSourceDataOfMIMEType_(id arg2, id arg3, id self);
void NSObject_cls_download_willResumeWithResponse_fromByte_(id arg2, id arg3, signed long long arg4, id self);
id NSObject_cls_download_willSendRequest_redirectResponse_(id arg2, id arg3, id arg4, id self);
void NSObject_cls_connection_didCancelAuthenticationChallenge_(id arg2, id arg3, id self);
void NSObject_cls_connection_didFailWithError_(id arg2, id arg3, id self);
void NSObject_cls_connectionDidFinishLoading_(id arg2, id self);
void NSObject_cls_connection_didReceiveAuthenticationChallenge_(id arg2, id arg3, id self);
void NSObject_cls_connection_didReceiveData_(id arg2, id arg3, id self);
void NSObject_cls_connection_didReceiveResponse_(id arg2, id arg3, id self);
id NSObject_cls_connection_willCacheResponse_(id arg2, id arg3, id self);
id NSObject_cls_connection_willSendRequest_redirectResponse_(id arg2, id arg3, id arg4, id self);
void NSObject_cls_URL_resourceDataDidBecomeAvailable_(id arg2, id arg3, id self);
void NSObject_cls_URL_resourceDidFailLoadingWithReason_(id arg2, id arg3, id self);
void NSObject_cls_URLResourceDidCancelLoading_(id arg2, id self);
void NSObject_cls_URLResourceDidFinishLoading_(id arg2, id self);
void NSObject_cls_performSelectorOnMainThread_withObject_waitUntilDone_modes_(SEL arg2, id arg3, unsigned char arg4, id arg5, id self);
void NSObject_cls_performSelectorOnMainThread_withObject_waitUntilDone_(SEL arg2, id arg3, unsigned char arg4, id self);
void NSObject_cls_performSelector_onThread_withObject_waitUntilDone_modes_(SEL arg2, id arg3, id arg4, unsigned char arg5, id arg6, id self);
void NSObject_cls_performSelector_onThread_withObject_waitUntilDone_(SEL arg2, id arg3, id arg4, unsigned char arg5, id self);
void NSObject_cls_performSelectorInBackground_withObject_(SEL arg2, id arg3, id self);
void NSObject_cls_performSelector_withObject_afterDelay_(SEL arg2, id arg3, double arg4, id self);
void NSObject_cls_performSelector_withObject_afterDelay_inModes_(SEL arg2, id arg3, double arg4, id arg5, id self);
Class NSObject_cls_classForPortCoder_noarg(id self);
id NSObject_cls_replacementObjectForPortCoder_(id arg2, id self);
void NSObject_cls_handlePortMessage_(id arg2, id self);
unsigned char NSObject_cls_doesContain_(id arg2, id self);
unsigned char NSObject_cls_isCaseInsensitiveLike_(id arg2, id self);
unsigned char NSObject_cls_isEqualTo_(id arg2, id self);
unsigned char NSObject_cls_isGreaterThan_(id arg2, id self);
unsigned char NSObject_cls_isGreaterThanOrEqualTo_(id arg2, id self);
unsigned char NSObject_cls_isLessThan_(id arg2, id self);
unsigned char NSObject_cls_isLessThanOrEqualTo_(id arg2, id self);
unsigned char NSObject_cls_isLike_(id arg2, id self);
unsigned char NSObject_cls_isNotEqualTo_(id arg2, id self);
unsigned long long NSObject_cls_sizeInBytes_noarg(id self);
unsigned long long NSObject_cls_sizeInBytesExcluding_(id arg2, id self);
unsigned long long NSObject_cls_sizeOfContentExcluding_(id arg2, id self);
unsigned long long NSObject_cls_sizeOfInstance_noarg(id self);
id NSObject_cls_descriptionWithLocale_(id arg2, id self);
id NSObject_cls_descriptionWithLocale_indent_(id arg2, unsigned long long arg3, id self);
unsigned char NSObject_cls__dealloc_noarg(id self);
unsigned char NSObject_cls_isMetaClass_noarg(id self);
unsigned char NSObject_cls_isClass_noarg(id self);
unsigned char NSObject_cls_isMemberOfClassNamed_(const char* arg2, id self);
struct objc_method_description* NSObject_cls_descriptionForMethod_(SEL arg2, id self);
id NSObject_cls_read_(void* arg2, id self);
id NSObject_cls_write_(void* arg2, id self);
id NSObject_cls_awake_noarg(id self);
id NSObject_cls_error_(const char* arg2, id self);
unsigned char NSObject_cls_isKindOf_(Class arg2, id self);
unsigned char NSObject_cls_isMemberOf_(Class arg2, id self);
unsigned char NSObject_cls_respondsTo_(SEL arg2, id self);
unsigned char NSObject_cls_conformsTo_(id arg2, id self);
union Unknown1804289383 /* ? */* NSObject_cls_methodFor_(SEL arg2, id self);
id NSObject_cls_doesNotRecognize_(SEL arg2, id self);
id NSObject_cls_perform_with_(SEL arg2, id arg3, id self);
id NSObject_cls_perform_with_with_(SEL arg2, id arg3, id arg4, id self);
void* NSObject_cls_observationInfo_noarg(id self);
void NSObject_cls_setObservationInfo_(void* arg2, id self);
void NSObject_cls_willChangeValueForDependentsOfKey_(id arg2, id self);
void NSObject_cls_didChangeValueForDependentsOfKey_(id arg2, id self);
void NSObject_cls_willChangeValueForKey_(id arg2, id self);
void NSObject_cls_didChangeValueForKey_(id arg2, id self);
void NSObject_cls_didChange_valuesAtIndexes_forKey_(unsigned long long arg2, id arg3, id arg4, id self);
void NSObject_cls_willChange_valuesAtIndexes_forKey_(unsigned long long arg2, id arg3, id arg4, id self);
void NSObject_cls_willChangeValueForKey_withSetMutation_usingObjects_(id arg2, unsigned long long arg3, id arg4, id self);
void NSObject_cls_didChangeValueForKey_withSetMutation_usingObjects_(id arg2, unsigned long long arg3, id arg4, id self);
void NSObject_cls_addObserver_forKeyPath_options_context_(id arg2, id arg3, unsigned long long arg4, void* arg5, id self);
void NSObject_cls_removeObserver_forKeyPath_(id arg2, id arg3, id self);
void NSObject_cls_removeObserver_forKeyPath_context_(id arg2, id arg3, void* arg4, id self);
void NSObject_cls_observeValueForKeyPath_ofObject_change_context_(id arg2, id arg3, id arg4, void* arg5, id self);
id NSObject_cls_dictionaryWithValuesForKeys_(id arg2, id self);
id NSObject_cls_mutableSetValueForKey_(id arg2, id self);
id NSObject_cls_mutableSetValueForKeyPath_(id arg2, id self);
id NSObject_cls_mutableArrayValueForKey_(id arg2, id self);
id NSObject_cls_mutableArrayValueForKeyPath_(id arg2, id self);
void NSObject_cls_setNilValueForKey_(id arg2, id self);
void NSObject_cls_setValue_forKey_(id arg2, id arg3, id self);
void NSObject_cls_setValue_forKeyPath_(id arg2, id arg3, id self);
void NSObject_cls_setValue_forUndefinedKey_(id arg2, id arg3, id self);
void NSObject_cls_setValuesForKeysWithDictionary_(id arg2, id self);
unsigned char NSObject_cls_validateValue_forKey_error_(id* arg2, id arg3, id* arg4, id self);
unsigned char NSObject_cls_validateValue_forKeyPath_error_(id* arg2, id arg3, id* arg4, id self);
id NSObject_cls_valueForKey_(id arg2, id self);
id NSObject_cls_valueForKeyPath_(id arg2, id self);
id NSObject_cls_valueForUndefinedKey_(id arg2, id self);
id NSObject_cls_storedValueForKey_(id arg2, id self);
void NSObject_cls_takeStoredValue_forKey_(id arg2, id arg3, id self);
void NSObject_cls_takeStoredValuesFromDictionary_(id arg2, id self);
id NSObject_cls_handleQueryWithUnboundKey_(id arg2, id self);
void NSObject_cls_handleTakeValue_forUnboundKey_(id arg2, id arg3, id self);
void NSObject_cls_takeValue_forKey_(id arg2, id arg3, id self);
void NSObject_cls_takeValue_forKeyPath_(id arg2, id arg3, id self);
void NSObject_cls_takeValuesFromDictionary_(id arg2, id self);
void NSObject_cls_unableToSetNilForKey_(id arg2, id self);
id NSObject_cls_valuesForKeys_(id arg2, id self);
Class NSObject_cls_unarchiver_cannotDecodeObjectOfClassName_originalClasses_(id arg2, id arg3, id arg4, id self);
id NSObject_cls_unarchiver_didDecodeObject_(id arg2, id arg3, id self);
void NSObject_cls_unarchiverDidFinish_(id arg2, id self);
void NSObject_cls_unarchiverWillFinish_(id arg2, id self);
void NSObject_cls_unarchiver_willReplaceObject_withObject_(id arg2, id arg3, id arg4, id self);
Class NSObject_cls_classForKeyedArchiver_noarg(id self);
id NSObject_cls_replacementObjectForKeyedArchiver_(id arg2, id self);
void NSObject_cls_archiver_didEncodeObject_(id arg2, id arg3, id self);
id NSObject_cls_archiver_willEncodeObject_(id arg2, id arg3, id self);
void NSObject_cls_archiverDidFinish_(id arg2, id self);
void NSObject_cls_archiverWillFinish_(id arg2, id self);
void NSObject_cls_archiver_willReplaceObject_withObject_(id arg2, id arg3, id arg4, id self);
unsigned char NSObject_cls__conformsToProtocolNamed_(const char* arg2, id self);
id NSObject_cls_attributeKeys_noarg(id self);
id NSObject_cls_classDescription_noarg(id self);
id NSObject_cls_inverseForRelationshipKey_(id arg2, id self);
id NSObject_cls_toManyRelationshipKeys_noarg(id self);
id NSObject_cls_toOneRelationshipKeys_noarg(id self);
void NSObject_cls__ARCCompliantRetainRelease_noarg(id self);
Class NSObject_cls_class_noarg(id self);
id NSObject_cls_className_noarg(id self);
id NSObject_cls_copy_noarg(id self);
void NSObject_cls_dealloc_noarg(id self);
void NSObject_cls_finalize_noarg(id self);
id NSObject_cls_free_noarg(id self);
id NSObject_cls_init_noarg(id self);
id NSObject_cls_mutableCopy_noarg(id self);
Class NSObject_cls_superclass_noarg(id self);
unsigned char NSObject_cls_conformsToProtocol_(id arg2, id self);
union Unknown846930886 /* ? */* NSObject_cls_methodForSelector_(SEL arg2, id self);
id NSObject_cls_methodSignatureForSelector_(SEL arg2, id self);
id NSObject_cls_description_noarg(id self);
void NSObject_cls_doesNotRecognizeSelector_(SEL arg2, id self);
void NSObject_cls_forwardInvocation_(id arg2, id self);
id NSObject_cls_awakeAfterUsingCoder_(id arg2, id self);
Class NSObject_cls_classForArchiver_noarg(id self);
Class NSObject_cls_classForCoder_noarg(id self);
id NSObject_cls_replacementObjectForArchiver_(id arg2, id self);
id NSObject_cls_replacementObjectForCoder_(id arg2, id self);
id NSObject_cls_autorelease_noarg(id self);
unsigned long long NSObject_cls_hash_noarg(id self);
unsigned char NSObject_cls_isEqual_(id arg2, id self);
unsigned char NSObject_cls_isKindOfClass_(Class arg2, id self);
unsigned char NSObject_cls_isMemberOfClass_(Class arg2, id self);
unsigned char NSObject_cls_isProxy_noarg(id self);
id NSObject_cls_performSelector_(SEL arg2, id self);
id NSObject_cls_performSelector_withObject_(SEL arg2, id arg3, id self);
id NSObject_cls_performSelector_withObject_withObject_(SEL arg2, id arg3, id arg4, id self);
oneway void NSObject_cls_release_noarg(id self);
unsigned char NSObject_cls_respondsToSelector_(SEL arg2, id self);
id NSObject_cls_retain_noarg(id self);
unsigned long long NSObject_cls_retainCount_noarg(id self);
id NSObject_cls_self_noarg(id self);
struct _NSZone* NSObject_cls_zone_noarg(id self);
void NSObject_cls_encodeWithCoder_(id arg2, id self);
id NSObject_cls_initWithCoder_(id arg2, id self);
id NSObject_cls_autoContentAccessingProxy_noarg(id self);
id NSObject_cls_forwardingTargetForSelector_(SEL arg2, id self);

id NSObject_inst_leakAt_(id* arg2, id self);
id NSObject_inst_leak_(id arg2, id self);
unsigned char NSObject_inst_registerAtExit_noarg(id self);
unsigned char NSObject_inst_registerAtExit_(SEL arg2, id self);
void NSObject_inst_setShouldCleanUp_(unsigned char arg2, id self);
unsigned char NSObject_inst_shouldCleanUp_noarg(id self);
id NSObject_inst_notImplemented_(SEL arg2, id self);
void NSObject_inst__setupForGSXML_noarg(id self);
void NSObject_inst_cancelPreviousPerformRequestsWithTarget_(id arg2, id self);
void NSObject_inst_cancelPreviousPerformRequestsWithTarget_selector_object_(id arg2, SEL arg3, id arg4, id self);
unsigned long long NSObject_inst_contentSizeOf_excluding_(id arg2, id arg3, id self);
unsigned long long NSObject_inst_sizeInBytes_noarg(id self);
unsigned long long NSObject_inst_sizeInBytesExcluding_(id arg2, id self);
unsigned long long NSObject_inst_sizeOfContentExcluding_(id arg2, id self);
void NSObject_inst_enableDoubleReleaseCheck_(unsigned char arg2, id self);
id NSObject_inst_descriptionWithLocale_(id arg2, id self);
id NSObject_inst_descriptionWithLocale_indent_(id arg2, unsigned long long arg3, id self);
struct objc_method_description* NSObject_inst_descriptionForInstanceMethod_(SEL arg2, id self);
signed long long NSObject_inst_streamVersion_(void* arg2, id self);
unsigned char NSObject_inst_instancesRespondTo_(SEL arg2, id self);
unsigned char NSObject_inst_conformsTo_(id arg2, id self);
union Unknown1681692777 /* ? */* NSObject_inst_instanceMethodFor_(SEL arg2, id self);
id NSObject_inst_poseAs_(Class arg2, id self);
unsigned char NSObject_inst_shouldCreateTraceableLocks_(unsigned char arg2, id self);
id NSObject_inst_tracedCondition_noarg(id self);
id NSObject_inst_tracedConditionLockWithCondition_(signed long long arg2, id self);
id NSObject_inst_tracedLock_noarg(id self);
id NSObject_inst_tracedRecursiveLock_noarg(id self);
unsigned char NSObject_inst_automaticallyNotifiesObserversForKey_(id arg2, id self);
void NSObject_inst_setKeys_triggerChangeNotificationsForDependentKey_(id arg2, id arg3, id self);
id NSObject_inst_keyPathsForValuesAffectingValueForKey_(id arg2, id self);
unsigned char NSObject_inst_accessInstanceVariablesDirectly_noarg(id self);
unsigned char NSObject_inst_useStoredAccessor_noarg(id self);
Class NSObject_inst_classForKeyedUnarchiver_noarg(id self);
void NSObject_inst__TrivialAllocInit_noarg(id self);
void NSObject_inst_load_noarg(id self);
void NSObject_inst_initialize_noarg(id self);
void NSObject_inst__atExit_noarg(id self);
id NSObject_inst_alloc_noarg(id self);
id NSObject_inst_allocWithZone_(struct _NSZone* arg2, id self);
id NSObject_inst_copyWithZone_(struct _NSZone* arg2, id self);
id NSObject_inst_new_noarg(id self);
Class NSObject_inst_superclass_noarg(id self);
unsigned char NSObject_inst_instancesRespondToSelector_(SEL arg2, id self);
unsigned char NSObject_inst_conformsToProtocol_(id arg2, id self);
union Unknown1714636915 /* ? */* NSObject_inst_instanceMethodForSelector_(SEL arg2, id self);
id NSObject_inst_instanceMethodSignatureForSelector_(SEL arg2, id self);
id NSObject_inst_description_noarg(id self);
void NSObject_inst_poseAsClass_(Class arg2, id self);
id NSObject_inst_autorelease_noarg(id self);
Class NSObject_inst_class_noarg(id self);
unsigned char NSObject_inst_isKindOfClass_(Class arg2, id self);
unsigned char NSObject_inst_isMemberOfClass_(Class arg2, id self);
unsigned char NSObject_inst_isSubclassOfClass_(Class arg2, id self);
oneway void NSObject_inst_release_noarg(id self);
id NSObject_inst_retain_noarg(id self);
unsigned long long NSObject_inst_retainCount_noarg(id self);
struct _NSZone* NSObject_inst_zone_noarg(id self);
unsigned char NSObject_inst_resolveClassMethod_(SEL arg2, id self);
unsigned char NSObject_inst_resolveInstanceMethod_(SEL arg2, id self);
void NSObject_inst_setVersion_(signed long long arg2, id self);
signed long long NSObject_inst_version_noarg(id self);
// End C interface to class NSObject
