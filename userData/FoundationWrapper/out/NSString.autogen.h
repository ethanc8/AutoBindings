@interface NSString
- (NSString*) stringByReplacingOccurrencesOfString: (NSString*) replace withString: (NSString*) by options: (NSStringCompareOptions) opts range: (NSRange) searchRange ;
- (NSComparisonResult) compare: (NSString*) string options: (NSUInteger) mask range: (NSRange) compareRange locale: (id) locale ;
- (unichar) characterAtIndex: (NSUInteger) index ;
- (int) intValue;
- (instancetype) initWithCString: (const char*) byteString encoding: (NSStringEncoding) encoding ;
- (double) doubleValue;
- (NSInteger) integerValue;
- (NSUInteger) maximumLengthOfBytesUsingEncoding: (NSStringEncoding) encoding ;
- (instancetype) initWithData: (NSData*) data encoding: (NSStringEncoding) encoding ;
- (NSString*) description;
- (BOOL) isAbsolutePath;
- (NSString*) stringByAppendingPathExtension: (NSString*) aString ;
- (NSString*) capitalizedString;
- (NSUInteger) completePathIntoString: (NSString**) outputName caseSensitive: (BOOL) flag matchesIntoArray: (NSArray**) outputArray filterTypes: (NSArray*) filterTypes ;
- (NSData*) dataUsingEncoding: (NSStringEncoding) encoding allowLossyConversion: (BOOL) flag ;
- (NSString*) stringByDeletingLastPathComponent;
- (NSString*) stringByRemovingPercentEncoding;
- (instancetype) initWithCharacters: (const unichar*) chars length: (NSUInteger) length ;
- (NSComparisonResult) caseInsensitiveCompare: (NSString*) aString ;
- (NSRange) paragraphRangeForRange: (NSRange) range ;
- (NSRange) rangeOfString: (NSString*) aString options: (NSStringCompareOptions) mask range: (NSRange) searchRange locale: (NSLocale*) locale ;
- (instancetype) initWithCharactersNoCopy: (unichar*) chars length: (NSUInteger) length freeWhenDone: (BOOL) flag ;
- (instancetype) initWithContentsOfURL: (NSURL*) url encoding: (NSStringEncoding) enc error: (NSError**) error ;
- (instancetype) initWithBytes: (const void*) bytes length: (NSUInteger) length encoding: (NSStringEncoding) encoding ;
- (NSRange) rangeOfString: (NSString*) string ;
- (NSRange) rangeOfCharacterFromSet: (NSCharacterSet*) aSet options: (NSUInteger) mask range: (NSRange) aRange ;
- (NSArray*) stringsByAppendingPaths: (NSArray*) paths ;
- (NSStringEncoding) smallestEncoding;
- (NSRange) rangeOfComposedCharacterSequencesForRange: (NSRange) range ;
- (const char*) cStringUsingEncoding: (NSStringEncoding) encoding ;
- (NSString*) commonPrefixWithString: (NSString*) aString options: (NSUInteger) mask ;
- (NSString*) stringByAbbreviatingWithTildeInPath;
- (BOOL) writeToFile: (NSString*) path atomically: (BOOL) atomically encoding: (NSStringEncoding) enc error: (NSError**) error ;
- (NSString*) stringByTrimmingCharactersInSet: (NSCharacterSet*) aSet ;
- (NSRange) rangeOfString: (NSString*) string options: (NSUInteger) mask ;
- (NSString*) precomposedStringWithCompatibilityMapping;
- (NSDictionary*) propertyListFromStringsFileFormat;
- (NSArray*) componentsSeparatedByCharactersInSet: (NSCharacterSet*) separator ;
- (NSString*) lastPathComponent;
- (NSUInteger) cStringLength;
- (NSString*) substringWithRange: (NSRange) aRange ;
- (NSString*) stringByAppendingString: (NSString*) aString ;
- (void) getCString: (char*) buffer maxLength: (NSUInteger) maxLength ;
- (instancetype) initWithCStringNoCopy: (char*) byteString length: (NSUInteger) length freeWhenDone: (BOOL) flag ;
- (NSRange) rangeOfString: (NSString*) aString options: (NSUInteger) mask range: (NSRange) aRange ;
- (void) getCharacters: (unichar*) buffer range: (NSRange) aRange ;
- (instancetype) initWithCString: (const char*) byteString length: (NSUInteger) length ;
- (NSStringEncoding) fastestEncoding;
- (const char*) lossyCString;
- (BOOL) hasPrefix: (NSString*) aString ;
- (instancetype) initWithFormat: (NSString*) format arguments: (va_list) argList ;
- (instancetype) initWithFormat: (NSString*) format locale: (NSDictionary*) locale ;
- (instancetype) initWithBytesNoCopy: (void*) bytes length: (NSUInteger) length encoding: (NSStringEncoding) encoding freeWhenDone: (BOOL) flag ;
- (BOOL) writeToFile: (NSString*) filename atomically: (BOOL) useAuxiliaryFile ;
- (const char*) UTF8String;
- (float) floatValue;
- (NSString*) stringByAppendingFormat: (NSString*) format ;
- (instancetype) initWithContentsOfFile: (NSString*) path usedEncoding: (NSStringEncoding*) enc error: (NSError**) error ;
- (NSComparisonResult) localizedCaseInsensitiveCompare: (NSString*) string ;
- (BOOL) canBeConvertedToEncoding: (NSStringEncoding) encoding ;
- (BOOL) hasSuffix: (NSString*) aString ;
- (instancetype) initWithContentsOfFile: (NSString*) path ;
- (instancetype) initWithContentsOfFile: (NSString*) path encoding: (NSStringEncoding) enc error: (NSError**) error ;
- (NSUInteger) lengthOfBytesUsingEncoding: (NSStringEncoding) encoding ;
- (NSArray*) componentsSeparatedByString: (NSString*) separator ;
- (NSComparisonResult) localizedCompare: (NSString*) string ;
- (NSString*) uppercaseString;
- (BOOL) containsString: (NSString*) string ;
- (instancetype) initWithString: (NSString*) string ;
- (int) _baseLength;
- (NSString*) stringByPaddingToLength: (NSUInteger) newLength withString: (NSString*) padString startingAtIndex: (NSUInteger) padIndex ;
- (instancetype) initWithCString: (const char*) byteString ;
- (instancetype) initWithFormat: (NSString*) format locale: (NSDictionary*) locale arguments: (va_list) argList ;
- (NSString*) stringByAddingPercentEncodingWithAllowedCharacters: (NSCharacterSet*) aSet ;
- (NSString*) decomposedStringWithCompatibilityMapping;
- (long long) longLongValue;
- (NSRange) rangeOfCharacterFromSet: (NSCharacterSet*) aSet options: (NSUInteger) mask ;
- (NSArray*) pathComponents;
- (NSString*) substringFromIndex: (NSUInteger) index ;
- (void) getLineStart: (NSUInteger*) startIndex end: (NSUInteger*) lineEndIndex contentsEnd: (NSUInteger*) contentsEndIndex forRange: (NSRange) aRange ;
- (NSString*) stringByResolvingSymlinksInPath;
- (NSString*) stringByAddingPercentEscapesUsingEncoding: (NSStringEncoding) e ;
- (instancetype) initWithUTF8String: (const char*) bytes ;
- (NSComparisonResult) compare: (NSString*) aString options: (NSUInteger) mask ;
- (BOOL) writeToURL: (NSURL*) url atomically: (BOOL) atomically encoding: (NSStringEncoding) enc error: (NSError**) error ;
- (BOOL) isEqual: (id) anObject ;
- (NSComparisonResult) compare: (NSString*) aString options: (NSUInteger) mask range: (NSRange) aRange ;
- (NSRange) rangeOfCharacterFromSet: (NSCharacterSet*) aSet ;
- (NSString*) stringByReplacingPercentEscapesUsingEncoding: (NSStringEncoding) e ;
- (instancetype) initWithContentsOfURL: (NSURL*) url ;
- (void) getParagraphStart: (NSUInteger*) startIndex end: (NSUInteger*) parEndIndex contentsEnd: (NSUInteger*) contentsEndIndex forRange: (NSRange) range ;
- (NSRange) lineRangeForRange: (NSRange) aRange ;
- (BOOL) getCString: (char*) buffer maxLength: (NSUInteger) maxLength encoding: (NSStringEncoding) encoding ;
- (BOOL) writeToURL: (NSURL*) url atomically: (BOOL) atomically ;
- (NSUInteger) hash;
- (instancetype) init;
- (instancetype) initWithFormat: (NSString*) format ;
- (NSComparisonResult) compare: (NSString*) aString ;
- (instancetype) initWithContentsOfURL: (NSURL*) url usedEncoding: (NSStringEncoding*) enc error: (NSError**) error ;
- (void) getCharacters: (unichar*) buffer ;
- (const char*) cString;
- (BOOL) boolValue;
- (NSData*) dataUsingEncoding: (NSStringEncoding) encoding ;
- (NSString*) decomposedStringWithCanonicalMapping;
- (NSRange) rangeOfComposedCharacterSequenceAtIndex: (NSUInteger) anIndex ;
- (NSString*) stringByDeletingPathExtension;
- (BOOL) getFileSystemRepresentation: (GSNativeChar*) buffer maxLength: (NSUInteger) size ;
- (NSString*) stringByAppendingPathComponent: (NSString*) aString ;
- (const GSNativeChar*) fileSystemRepresentation;
- (void) enumerateSubstringsInRange: (NSRange) range options: (NSStringEnumerationOptions) opts usingBlock: (GSNSStringEnumerationBlock) block ;
- (void) getCString: (char*) buffer ;
- (NSString*) pathExtension;
- (NSString*) lowercaseString;
- (NSString*) stringByStandardizingPath;
- (NSString*) stringByReplacingOccurrencesOfString: (NSString*) replace withString: (NSString*) by ;
- (NSString*) substringToIndex: (NSUInteger) index ;
- (id) propertyList;
- (NSString*) precomposedStringWithCanonicalMapping;
- (NSUInteger) length;
- (BOOL) isEqualToString: (NSString*) aString ;
- (void) getCString: (char*) buffer maxLength: (NSUInteger) maxLength range: (NSRange) aRange remainingRange: (NSRange*) leftoverRange ;
- (NSString*) stringByReplacingCharactersInRange: (NSRange) aRange withString: (NSString*) by ;
- (NSString*) stringByExpandingTildeInPath;

+ (NSString*) localizedNameOfStringEncoding: (NSStringEncoding) encoding ;
+ (instancetype) stringWithContentsOfURL: (NSURL*) url encoding: (NSStringEncoding) enc error: (NSError**) error ;
+ (instancetype) stringWithContentsOfURL: (NSURL*) url ;
+ (NSString*) pathWithComponents: (NSArray*) components ;
+ (NSStringEncoding*) availableStringEncodings;
+ (instancetype) stringWithCharacters: (const unichar*) chars length: (NSUInteger) length ;
+ (instancetype) stringWithContentsOfFile: (NSString*) path encoding: (NSStringEncoding) enc error: (NSError**) error ;
+ (instancetype) stringWithCString: (const char*) byteString encoding: (NSStringEncoding) encoding ;
+ (instancetype) stringWithCString: (const char*) byteString length: (NSUInteger) length ;
+ (instancetype) stringWithFormat: (NSString*) format ;
+ (instancetype) string;
+ (NSString*) localizedStringWithFormat: (NSString*) format ;
+ (instancetype) stringWithContentsOfFile: (NSString*) path ;
+ (instancetype) stringWithUTF8String: (const char*) bytes ;
+ (NSStringEncoding) defaultCStringEncoding;
+ (instancetype) stringWithString: (NSString*) aString ;
+ (Class) constantStringClass;
+ (instancetype) stringWithContentsOfFile: (NSString*) path usedEncoding: (NSStringEncoding*) enc error: (NSError**) error ;
+ (instancetype) stringWithContentsOfURL: (NSURL*) url usedEncoding: (NSStringEncoding*) enc error: (NSError**) error ;
+ (instancetype) stringWithCString: (const char*) byteString ;
@end // NSString
